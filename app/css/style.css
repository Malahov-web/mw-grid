@charset "UTF-8";
/*
 * Project: mw-grid
 * Description: Powerfull and lightweight CSS layout framework
 * Homepage: https://github.com/Malahov-web/mw-grid
 * Author: Kirill Malahov
 * Author URI: http://malahov-web.com
 */
/*
 * Table of contents   Содержание
 *
 *  0. General Vars, Mixins, Extends
 *  1. Header
 *  2. menu-top
 *  3. 
 *  4. Footer
 *  5. menu-side

 *  14.
 *
 */
/*
* Options
* 1. Structure elements 
* 2. Modules display
* 3. Columns
* 4. Auxiliary elements
* 5. Collapse 
* 6. Responsive utilites
* 7. Text utulites
* 8. SCSS utulites
*   8.1 Functions
*   8.1 Mixins
*/
/*
+ Add $columns gap in devices for each device,
in all slectors where using $columns_gap use column gap from devices
in default $devices add global $columns_gap
*/
/* Options: */
@import url("https://fonts.googleapis.com/css?family=Nunito+Sans:300,300i,400,600,700&display=swap");
@media (min-width: 320px) {
  .container {
    padding-left: 15px;
    padding-right: 15px; }
  .row,
  .row-line,
  .row-flex {
    margin-left: -15px;
    margin-right: -15px; }
  [class*="mv_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="mh_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="tb_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="ds_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="hd_"] {
    padding-left: 15px;
    padding-right: 15px; } }

@media (min-width: 576px) {
  .container {
    padding-left: 15px;
    padding-right: 15px; }
  .row,
  .row-line,
  .row-flex {
    margin-left: -15px;
    margin-right: -15px; }
  [class*="mv_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="mh_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="tb_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="ds_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="hd_"] {
    padding-left: 15px;
    padding-right: 15px; } }

@media (min-width: 768px) {
  .container {
    padding-left: 15px;
    padding-right: 15px; }
  .row,
  .row-line,
  .row-flex {
    margin-left: -15px;
    margin-right: -15px; }
  [class*="mv_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="mh_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="tb_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="ds_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="hd_"] {
    padding-left: 15px;
    padding-right: 15px; } }

@media (min-width: 1024px) {
  .container {
    padding-left: 15px;
    padding-right: 15px; }
  .row,
  .row-line,
  .row-flex {
    margin-left: -15px;
    margin-right: -15px; }
  [class*="mv_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="mh_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="tb_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="ds_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="hd_"] {
    padding-left: 15px;
    padding-right: 15px; } }

@media (min-width: 1366px) {
  .container {
    padding-left: 15px;
    padding-right: 15px; }
  .row,
  .row-line,
  .row-flex {
    margin-left: -15px;
    margin-right: -15px; }
  [class*="mv_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="mh_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="tb_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="ds_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="hd_"] {
    padding-left: 15px;
    padding-right: 15px; } }

/* 1. Structure elements */
.section {
  float: left;
  width: 100%;
  clear: both; }

.container {
  max-width: 1200px;
  margin: 0 auto;
  box-sizing: border-box;
  position: relative; }

.container-elastic {
  max-width: none; }

/* 2. Modules display */
/*
Modules have:
    vertical aligment ( .middle, etc.. )
    reverse order ( .row-reverse )
*/
/* Block  model */
.row > div {
  float: left; }

.row.reverse > div,
.row.row-reverse > div {
  float: right; }

/* Inline-block  model */
.row-line {
  font-size: 0; }

.row-line > div {
  float: none;
  display: inline-block; }

.row-line.middle > div {
  vertical-align: middle; }

.row-line.top > div {
  vertical-align: top; }

.row-line.bottom > div {
  vertical-align: bottom; }

.row-line.baseline > div {
  vertical-align: baseline; }

.row-line.row-reverse,
.row-line.reverse {
  direction: rtl; }

.row-line.row-reverse,
.row-line.reverse > div {
  direction: ltr; }

/* Flex  model */
.row-flex {
  display: flex;
  flex-wrap: wrap; }

.row-flexbox {
  display: flex; }

[class*=row-flex].middle {
  align-items: center; }

[class*=row-flex].top {
  align-items: flex-start; }

[class*=row-flex].bottom {
  align-items: flex-end; }

[class*=row-flex].baseline {
  align-items: baseline; }

[class*=row-flex].stretch {
  align-items: stretch; }

.row-flex.row-reverse,
.row-flex.reverse {
  flex-direction: row-reverse; }

@media (min-width: 320px) {
  .row-line.mv_middle > div {
    vertical-align: middle; }
  .row-line.mv_top > div {
    vertical-align: top; }
  .row-line.mv_bottom > div {
    vertical-align: bottom; }
  .row-line.mv_baseline > div {
    vertical-align: baseline; }
  [class*=row-flex].mv_middle {
    align-items: center; }
  [class*=row-flex].mv_top {
    align-items: flex-start; }
  [class*=row-flex].mv_bottom {
    align-items: flex-end; }
  [class*=row-flex].mv_baseline {
    align-items: baseline; }
  [class*=row-flex].mv_stretch {
    align-items: stretch; } }

.row-line[class*="mv_"],
.row-flex[class*="mv_"],
.row-flexbox[class*="mv_"] {
  padding-left: 0;
  padding-right: 0; }

@media (min-width: 576px) {
  .row-line.mh_middle > div {
    vertical-align: middle; }
  .row-line.mh_top > div {
    vertical-align: top; }
  .row-line.mh_bottom > div {
    vertical-align: bottom; }
  .row-line.mh_baseline > div {
    vertical-align: baseline; }
  [class*=row-flex].mh_middle {
    align-items: center; }
  [class*=row-flex].mh_top {
    align-items: flex-start; }
  [class*=row-flex].mh_bottom {
    align-items: flex-end; }
  [class*=row-flex].mh_baseline {
    align-items: baseline; }
  [class*=row-flex].mh_stretch {
    align-items: stretch; } }

.row-line[class*="mh_"],
.row-flex[class*="mh_"],
.row-flexbox[class*="mh_"] {
  padding-left: 0;
  padding-right: 0; }

@media (min-width: 768px) {
  .row-line.tb_middle > div {
    vertical-align: middle; }
  .row-line.tb_top > div {
    vertical-align: top; }
  .row-line.tb_bottom > div {
    vertical-align: bottom; }
  .row-line.tb_baseline > div {
    vertical-align: baseline; }
  [class*=row-flex].tb_middle {
    align-items: center; }
  [class*=row-flex].tb_top {
    align-items: flex-start; }
  [class*=row-flex].tb_bottom {
    align-items: flex-end; }
  [class*=row-flex].tb_baseline {
    align-items: baseline; }
  [class*=row-flex].tb_stretch {
    align-items: stretch; } }

.row-line[class*="tb_"],
.row-flex[class*="tb_"],
.row-flexbox[class*="tb_"] {
  padding-left: 0;
  padding-right: 0; }

@media (min-width: 1024px) {
  .row-line.ds_middle > div {
    vertical-align: middle; }
  .row-line.ds_top > div {
    vertical-align: top; }
  .row-line.ds_bottom > div {
    vertical-align: bottom; }
  .row-line.ds_baseline > div {
    vertical-align: baseline; }
  [class*=row-flex].ds_middle {
    align-items: center; }
  [class*=row-flex].ds_top {
    align-items: flex-start; }
  [class*=row-flex].ds_bottom {
    align-items: flex-end; }
  [class*=row-flex].ds_baseline {
    align-items: baseline; }
  [class*=row-flex].ds_stretch {
    align-items: stretch; } }

.row-line[class*="ds_"],
.row-flex[class*="ds_"],
.row-flexbox[class*="ds_"] {
  padding-left: 0;
  padding-right: 0; }

@media (min-width: 1366px) {
  .row-line.hd_middle > div {
    vertical-align: middle; }
  .row-line.hd_top > div {
    vertical-align: top; }
  .row-line.hd_bottom > div {
    vertical-align: bottom; }
  .row-line.hd_baseline > div {
    vertical-align: baseline; }
  [class*=row-flex].hd_middle {
    align-items: center; }
  [class*=row-flex].hd_top {
    align-items: flex-start; }
  [class*=row-flex].hd_bottom {
    align-items: flex-end; }
  [class*=row-flex].hd_baseline {
    align-items: baseline; }
  [class*=row-flex].hd_stretch {
    align-items: stretch; } }

.row-line[class*="hd_"],
.row-flex[class*="hd_"],
.row-flexbox[class*="hd_"] {
  padding-left: 0;
  padding-right: 0; }

/* 3. Columns */
/* 3. Columns v.2 */
[class*="mv_"], [class*="mh_"], [class*="tb_"], [class*="ds_"], [class*="hd_"] {
  box-sizing: border-box;
  position: relative;
  min-height: 1px; }

@media (min-width: 320px) {
  .container-mv_ {
    max-width: 300px; }
  .mv_offset_0 {
    margin-left: 0; }
  .mv_1 {
    width: 4.16667%; }
  .mv_offset_1 {
    margin-left: 4.16667%; }
  .mv_2 {
    width: 8.33333%; }
  .mv_offset_2 {
    margin-left: 8.33333%; }
  .mv_3 {
    width: 12.5%; }
  .mv_offset_3 {
    margin-left: 12.5%; }
  .mv_4 {
    width: 16.66667%; }
  .mv_offset_4 {
    margin-left: 16.66667%; }
  .mv_5 {
    width: 20.83333%; }
  .mv_offset_5 {
    margin-left: 20.83333%; }
  .mv_6 {
    width: 25%; }
  .mv_offset_6 {
    margin-left: 25%; }
  .mv_7 {
    width: 29.16667%; }
  .mv_offset_7 {
    margin-left: 29.16667%; }
  .mv_8 {
    width: 33.33333%; }
  .mv_offset_8 {
    margin-left: 33.33333%; }
  .mv_9 {
    width: 37.5%; }
  .mv_offset_9 {
    margin-left: 37.5%; }
  .mv_10 {
    width: 41.66667%; }
  .mv_offset_10 {
    margin-left: 41.66667%; }
  .mv_11 {
    width: 45.83333%; }
  .mv_offset_11 {
    margin-left: 45.83333%; }
  .mv_12 {
    width: 50%; }
  .mv_offset_12 {
    margin-left: 50%; }
  .mv_13 {
    width: 54.16667%; }
  .mv_offset_13 {
    margin-left: 54.16667%; }
  .mv_14 {
    width: 58.33333%; }
  .mv_offset_14 {
    margin-left: 58.33333%; }
  .mv_15 {
    width: 62.5%; }
  .mv_offset_15 {
    margin-left: 62.5%; }
  .mv_16 {
    width: 66.66667%; }
  .mv_offset_16 {
    margin-left: 66.66667%; }
  .mv_17 {
    width: 70.83333%; }
  .mv_offset_17 {
    margin-left: 70.83333%; }
  .mv_18 {
    width: 75%; }
  .mv_offset_18 {
    margin-left: 75%; }
  .mv_19 {
    width: 79.16667%; }
  .mv_offset_19 {
    margin-left: 79.16667%; }
  .mv_20 {
    width: 83.33333%; }
  .mv_offset_20 {
    margin-left: 83.33333%; }
  .mv_21 {
    width: 87.5%; }
  .mv_offset_21 {
    margin-left: 87.5%; }
  .mv_22 {
    width: 91.66667%; }
  .mv_offset_22 {
    margin-left: 91.66667%; }
  .mv_23 {
    width: 95.83333%; }
  .mv_offset_23 {
    margin-left: 95.83333%; }
  .mv_24 {
    width: 100%; }
  .mv_offset_24 {
    margin-left: 100%; }
  .mv_order_1 {
    order: 1; }
  .mv_order_2 {
    order: 2; }
  .mv_order_3 {
    order: 3; }
  .mv_order_4 {
    order: 4; }
  .mv_order_5 {
    order: 5; }
  .mv_order_6 {
    order: 6; }
  .mv_order_7 {
    order: 7; }
  .mv_order_8 {
    order: 8; }
  .mv_order_9 {
    order: 9; }
  .mv_order_10 {
    order: 10; }
  .mv_order_11 {
    order: 11; }
  .mv_order_12 {
    order: 12; }
  .mv_order_13 {
    order: 13; }
  .mv_order_14 {
    order: 14; }
  .mv_order_15 {
    order: 15; }
  .mv_order_16 {
    order: 16; }
  .mv_order_17 {
    order: 17; }
  .mv_order_18 {
    order: 18; }
  .mv_order_19 {
    order: 19; }
  .mv_order_20 {
    order: 20; }
  .mv_order_21 {
    order: 21; }
  .mv_order_22 {
    order: 22; }
  .mv_order_23 {
    order: 23; }
  .mv_order_24 {
    order: 24; }
  .row .mv_self_centered {
    float: none;
    margin: 0 auto; }
  .row-flex .mv_self_centered {
    margin: 0 auto; } }

@media (min-width: 576px) {
  .container-mh_ {
    max-width: 540px; }
  .mh_offset_0 {
    margin-left: 0; }
  .mh_1 {
    width: 4.16667%; }
  .mh_offset_1 {
    margin-left: 4.16667%; }
  .mh_2 {
    width: 8.33333%; }
  .mh_offset_2 {
    margin-left: 8.33333%; }
  .mh_3 {
    width: 12.5%; }
  .mh_offset_3 {
    margin-left: 12.5%; }
  .mh_4 {
    width: 16.66667%; }
  .mh_offset_4 {
    margin-left: 16.66667%; }
  .mh_5 {
    width: 20.83333%; }
  .mh_offset_5 {
    margin-left: 20.83333%; }
  .mh_6 {
    width: 25%; }
  .mh_offset_6 {
    margin-left: 25%; }
  .mh_7 {
    width: 29.16667%; }
  .mh_offset_7 {
    margin-left: 29.16667%; }
  .mh_8 {
    width: 33.33333%; }
  .mh_offset_8 {
    margin-left: 33.33333%; }
  .mh_9 {
    width: 37.5%; }
  .mh_offset_9 {
    margin-left: 37.5%; }
  .mh_10 {
    width: 41.66667%; }
  .mh_offset_10 {
    margin-left: 41.66667%; }
  .mh_11 {
    width: 45.83333%; }
  .mh_offset_11 {
    margin-left: 45.83333%; }
  .mh_12 {
    width: 50%; }
  .mh_offset_12 {
    margin-left: 50%; }
  .mh_13 {
    width: 54.16667%; }
  .mh_offset_13 {
    margin-left: 54.16667%; }
  .mh_14 {
    width: 58.33333%; }
  .mh_offset_14 {
    margin-left: 58.33333%; }
  .mh_15 {
    width: 62.5%; }
  .mh_offset_15 {
    margin-left: 62.5%; }
  .mh_16 {
    width: 66.66667%; }
  .mh_offset_16 {
    margin-left: 66.66667%; }
  .mh_17 {
    width: 70.83333%; }
  .mh_offset_17 {
    margin-left: 70.83333%; }
  .mh_18 {
    width: 75%; }
  .mh_offset_18 {
    margin-left: 75%; }
  .mh_19 {
    width: 79.16667%; }
  .mh_offset_19 {
    margin-left: 79.16667%; }
  .mh_20 {
    width: 83.33333%; }
  .mh_offset_20 {
    margin-left: 83.33333%; }
  .mh_21 {
    width: 87.5%; }
  .mh_offset_21 {
    margin-left: 87.5%; }
  .mh_22 {
    width: 91.66667%; }
  .mh_offset_22 {
    margin-left: 91.66667%; }
  .mh_23 {
    width: 95.83333%; }
  .mh_offset_23 {
    margin-left: 95.83333%; }
  .mh_24 {
    width: 100%; }
  .mh_offset_24 {
    margin-left: 100%; }
  .mh_order_1 {
    order: 1; }
  .mh_order_2 {
    order: 2; }
  .mh_order_3 {
    order: 3; }
  .mh_order_4 {
    order: 4; }
  .mh_order_5 {
    order: 5; }
  .mh_order_6 {
    order: 6; }
  .mh_order_7 {
    order: 7; }
  .mh_order_8 {
    order: 8; }
  .mh_order_9 {
    order: 9; }
  .mh_order_10 {
    order: 10; }
  .mh_order_11 {
    order: 11; }
  .mh_order_12 {
    order: 12; }
  .mh_order_13 {
    order: 13; }
  .mh_order_14 {
    order: 14; }
  .mh_order_15 {
    order: 15; }
  .mh_order_16 {
    order: 16; }
  .mh_order_17 {
    order: 17; }
  .mh_order_18 {
    order: 18; }
  .mh_order_19 {
    order: 19; }
  .mh_order_20 {
    order: 20; }
  .mh_order_21 {
    order: 21; }
  .mh_order_22 {
    order: 22; }
  .mh_order_23 {
    order: 23; }
  .mh_order_24 {
    order: 24; }
  .row .mh_self_centered {
    float: none;
    margin: 0 auto; }
  .row-flex .mh_self_centered {
    margin: 0 auto; } }

@media (min-width: 768px) {
  .container-tb_ {
    max-width: 750px; }
  .tb_offset_0 {
    margin-left: 0; }
  .tb_1 {
    width: 4.16667%; }
  .tb_offset_1 {
    margin-left: 4.16667%; }
  .tb_2 {
    width: 8.33333%; }
  .tb_offset_2 {
    margin-left: 8.33333%; }
  .tb_3 {
    width: 12.5%; }
  .tb_offset_3 {
    margin-left: 12.5%; }
  .tb_4 {
    width: 16.66667%; }
  .tb_offset_4 {
    margin-left: 16.66667%; }
  .tb_5 {
    width: 20.83333%; }
  .tb_offset_5 {
    margin-left: 20.83333%; }
  .tb_6 {
    width: 25%; }
  .tb_offset_6 {
    margin-left: 25%; }
  .tb_7 {
    width: 29.16667%; }
  .tb_offset_7 {
    margin-left: 29.16667%; }
  .tb_8 {
    width: 33.33333%; }
  .tb_offset_8 {
    margin-left: 33.33333%; }
  .tb_9 {
    width: 37.5%; }
  .tb_offset_9 {
    margin-left: 37.5%; }
  .tb_10 {
    width: 41.66667%; }
  .tb_offset_10 {
    margin-left: 41.66667%; }
  .tb_11 {
    width: 45.83333%; }
  .tb_offset_11 {
    margin-left: 45.83333%; }
  .tb_12 {
    width: 50%; }
  .tb_offset_12 {
    margin-left: 50%; }
  .tb_13 {
    width: 54.16667%; }
  .tb_offset_13 {
    margin-left: 54.16667%; }
  .tb_14 {
    width: 58.33333%; }
  .tb_offset_14 {
    margin-left: 58.33333%; }
  .tb_15 {
    width: 62.5%; }
  .tb_offset_15 {
    margin-left: 62.5%; }
  .tb_16 {
    width: 66.66667%; }
  .tb_offset_16 {
    margin-left: 66.66667%; }
  .tb_17 {
    width: 70.83333%; }
  .tb_offset_17 {
    margin-left: 70.83333%; }
  .tb_18 {
    width: 75%; }
  .tb_offset_18 {
    margin-left: 75%; }
  .tb_19 {
    width: 79.16667%; }
  .tb_offset_19 {
    margin-left: 79.16667%; }
  .tb_20 {
    width: 83.33333%; }
  .tb_offset_20 {
    margin-left: 83.33333%; }
  .tb_21 {
    width: 87.5%; }
  .tb_offset_21 {
    margin-left: 87.5%; }
  .tb_22 {
    width: 91.66667%; }
  .tb_offset_22 {
    margin-left: 91.66667%; }
  .tb_23 {
    width: 95.83333%; }
  .tb_offset_23 {
    margin-left: 95.83333%; }
  .tb_24 {
    width: 100%; }
  .tb_offset_24 {
    margin-left: 100%; }
  .tb_order_1 {
    order: 1; }
  .tb_order_2 {
    order: 2; }
  .tb_order_3 {
    order: 3; }
  .tb_order_4 {
    order: 4; }
  .tb_order_5 {
    order: 5; }
  .tb_order_6 {
    order: 6; }
  .tb_order_7 {
    order: 7; }
  .tb_order_8 {
    order: 8; }
  .tb_order_9 {
    order: 9; }
  .tb_order_10 {
    order: 10; }
  .tb_order_11 {
    order: 11; }
  .tb_order_12 {
    order: 12; }
  .tb_order_13 {
    order: 13; }
  .tb_order_14 {
    order: 14; }
  .tb_order_15 {
    order: 15; }
  .tb_order_16 {
    order: 16; }
  .tb_order_17 {
    order: 17; }
  .tb_order_18 {
    order: 18; }
  .tb_order_19 {
    order: 19; }
  .tb_order_20 {
    order: 20; }
  .tb_order_21 {
    order: 21; }
  .tb_order_22 {
    order: 22; }
  .tb_order_23 {
    order: 23; }
  .tb_order_24 {
    order: 24; }
  .row .tb_self_centered {
    float: none;
    margin: 0 auto; }
  .row-flex .tb_self_centered {
    margin: 0 auto; } }

@media (min-width: 1024px) {
  .container-ds_ {
    max-width: 960px; }
  .ds_offset_0 {
    margin-left: 0; }
  .ds_1 {
    width: 4.16667%; }
  .ds_offset_1 {
    margin-left: 4.16667%; }
  .ds_2 {
    width: 8.33333%; }
  .ds_offset_2 {
    margin-left: 8.33333%; }
  .ds_3 {
    width: 12.5%; }
  .ds_offset_3 {
    margin-left: 12.5%; }
  .ds_4 {
    width: 16.66667%; }
  .ds_offset_4 {
    margin-left: 16.66667%; }
  .ds_5 {
    width: 20.83333%; }
  .ds_offset_5 {
    margin-left: 20.83333%; }
  .ds_6 {
    width: 25%; }
  .ds_offset_6 {
    margin-left: 25%; }
  .ds_7 {
    width: 29.16667%; }
  .ds_offset_7 {
    margin-left: 29.16667%; }
  .ds_8 {
    width: 33.33333%; }
  .ds_offset_8 {
    margin-left: 33.33333%; }
  .ds_9 {
    width: 37.5%; }
  .ds_offset_9 {
    margin-left: 37.5%; }
  .ds_10 {
    width: 41.66667%; }
  .ds_offset_10 {
    margin-left: 41.66667%; }
  .ds_11 {
    width: 45.83333%; }
  .ds_offset_11 {
    margin-left: 45.83333%; }
  .ds_12 {
    width: 50%; }
  .ds_offset_12 {
    margin-left: 50%; }
  .ds_13 {
    width: 54.16667%; }
  .ds_offset_13 {
    margin-left: 54.16667%; }
  .ds_14 {
    width: 58.33333%; }
  .ds_offset_14 {
    margin-left: 58.33333%; }
  .ds_15 {
    width: 62.5%; }
  .ds_offset_15 {
    margin-left: 62.5%; }
  .ds_16 {
    width: 66.66667%; }
  .ds_offset_16 {
    margin-left: 66.66667%; }
  .ds_17 {
    width: 70.83333%; }
  .ds_offset_17 {
    margin-left: 70.83333%; }
  .ds_18 {
    width: 75%; }
  .ds_offset_18 {
    margin-left: 75%; }
  .ds_19 {
    width: 79.16667%; }
  .ds_offset_19 {
    margin-left: 79.16667%; }
  .ds_20 {
    width: 83.33333%; }
  .ds_offset_20 {
    margin-left: 83.33333%; }
  .ds_21 {
    width: 87.5%; }
  .ds_offset_21 {
    margin-left: 87.5%; }
  .ds_22 {
    width: 91.66667%; }
  .ds_offset_22 {
    margin-left: 91.66667%; }
  .ds_23 {
    width: 95.83333%; }
  .ds_offset_23 {
    margin-left: 95.83333%; }
  .ds_24 {
    width: 100%; }
  .ds_offset_24 {
    margin-left: 100%; }
  .ds_order_1 {
    order: 1; }
  .ds_order_2 {
    order: 2; }
  .ds_order_3 {
    order: 3; }
  .ds_order_4 {
    order: 4; }
  .ds_order_5 {
    order: 5; }
  .ds_order_6 {
    order: 6; }
  .ds_order_7 {
    order: 7; }
  .ds_order_8 {
    order: 8; }
  .ds_order_9 {
    order: 9; }
  .ds_order_10 {
    order: 10; }
  .ds_order_11 {
    order: 11; }
  .ds_order_12 {
    order: 12; }
  .ds_order_13 {
    order: 13; }
  .ds_order_14 {
    order: 14; }
  .ds_order_15 {
    order: 15; }
  .ds_order_16 {
    order: 16; }
  .ds_order_17 {
    order: 17; }
  .ds_order_18 {
    order: 18; }
  .ds_order_19 {
    order: 19; }
  .ds_order_20 {
    order: 20; }
  .ds_order_21 {
    order: 21; }
  .ds_order_22 {
    order: 22; }
  .ds_order_23 {
    order: 23; }
  .ds_order_24 {
    order: 24; }
  .row .ds_self_centered {
    float: none;
    margin: 0 auto; }
  .row-flex .ds_self_centered {
    margin: 0 auto; } }

@media (min-width: 1366px) {
  .container-hd_ {
    max-width: 1200px; }
  .hd_offset_0 {
    margin-left: 0; }
  .hd_1 {
    width: 4.16667%; }
  .hd_offset_1 {
    margin-left: 4.16667%; }
  .hd_2 {
    width: 8.33333%; }
  .hd_offset_2 {
    margin-left: 8.33333%; }
  .hd_3 {
    width: 12.5%; }
  .hd_offset_3 {
    margin-left: 12.5%; }
  .hd_4 {
    width: 16.66667%; }
  .hd_offset_4 {
    margin-left: 16.66667%; }
  .hd_5 {
    width: 20.83333%; }
  .hd_offset_5 {
    margin-left: 20.83333%; }
  .hd_6 {
    width: 25%; }
  .hd_offset_6 {
    margin-left: 25%; }
  .hd_7 {
    width: 29.16667%; }
  .hd_offset_7 {
    margin-left: 29.16667%; }
  .hd_8 {
    width: 33.33333%; }
  .hd_offset_8 {
    margin-left: 33.33333%; }
  .hd_9 {
    width: 37.5%; }
  .hd_offset_9 {
    margin-left: 37.5%; }
  .hd_10 {
    width: 41.66667%; }
  .hd_offset_10 {
    margin-left: 41.66667%; }
  .hd_11 {
    width: 45.83333%; }
  .hd_offset_11 {
    margin-left: 45.83333%; }
  .hd_12 {
    width: 50%; }
  .hd_offset_12 {
    margin-left: 50%; }
  .hd_13 {
    width: 54.16667%; }
  .hd_offset_13 {
    margin-left: 54.16667%; }
  .hd_14 {
    width: 58.33333%; }
  .hd_offset_14 {
    margin-left: 58.33333%; }
  .hd_15 {
    width: 62.5%; }
  .hd_offset_15 {
    margin-left: 62.5%; }
  .hd_16 {
    width: 66.66667%; }
  .hd_offset_16 {
    margin-left: 66.66667%; }
  .hd_17 {
    width: 70.83333%; }
  .hd_offset_17 {
    margin-left: 70.83333%; }
  .hd_18 {
    width: 75%; }
  .hd_offset_18 {
    margin-left: 75%; }
  .hd_19 {
    width: 79.16667%; }
  .hd_offset_19 {
    margin-left: 79.16667%; }
  .hd_20 {
    width: 83.33333%; }
  .hd_offset_20 {
    margin-left: 83.33333%; }
  .hd_21 {
    width: 87.5%; }
  .hd_offset_21 {
    margin-left: 87.5%; }
  .hd_22 {
    width: 91.66667%; }
  .hd_offset_22 {
    margin-left: 91.66667%; }
  .hd_23 {
    width: 95.83333%; }
  .hd_offset_23 {
    margin-left: 95.83333%; }
  .hd_24 {
    width: 100%; }
  .hd_offset_24 {
    margin-left: 100%; }
  .hd_order_1 {
    order: 1; }
  .hd_order_2 {
    order: 2; }
  .hd_order_3 {
    order: 3; }
  .hd_order_4 {
    order: 4; }
  .hd_order_5 {
    order: 5; }
  .hd_order_6 {
    order: 6; }
  .hd_order_7 {
    order: 7; }
  .hd_order_8 {
    order: 8; }
  .hd_order_9 {
    order: 9; }
  .hd_order_10 {
    order: 10; }
  .hd_order_11 {
    order: 11; }
  .hd_order_12 {
    order: 12; }
  .hd_order_13 {
    order: 13; }
  .hd_order_14 {
    order: 14; }
  .hd_order_15 {
    order: 15; }
  .hd_order_16 {
    order: 16; }
  .hd_order_17 {
    order: 17; }
  .hd_order_18 {
    order: 18; }
  .hd_order_19 {
    order: 19; }
  .hd_order_20 {
    order: 20; }
  .hd_order_21 {
    order: 21; }
  .hd_order_22 {
    order: 22; }
  .hd_order_23 {
    order: 23; }
  .hd_order_24 {
    order: 24; }
  .row .hd_self_centered {
    float: none;
    margin: 0 auto; }
  .row-flex .hd_self_centered {
    margin: 0 auto; } }

/* 4. Auxiliary elements (Вспомогательные структурные элементы) */
.container:before,
.container:after,
.row:before,
.row:after {
  display: table;
  content: " ";
  box-sizing: border-box; }

.container:after,
.row:after {
  clear: both; }

/* 5. Collapse */
.collapse > [class*=row] > [class*="mv_"], .collapse > [class*=row] > [class*="mh_"], .collapse > [class*=row] > [class*="tb_"], .collapse > [class*=row] > [class*="ds_"], .collapse > [class*=row] > [class*="hd_"], [class*=row].collapse [class*="mv_"], [class*=row].collapse [class*="mh_"], [class*=row].collapse [class*="tb_"], [class*=row].collapse [class*="ds_"], [class*=row].collapse [class*="hd_"], [class*=row].collapse-this > [class*="mv_"], [class*=row].collapse-this > [class*="mh_"], [class*=row].collapse-this > [class*="tb_"], [class*=row].collapse-this > [class*="ds_"], [class*=row].collapse-this > [class*="hd_"] {
  padding-left: 0;
  padding-right: 0; }

.collapse {
  padding-left: 0;
  padding-right: 0; }
  .collapse > [class*=row] {
    margin-left: 0;
    margin-right: 0; }

[class*=row].collapse {
  margin-left: 0;
  margin-right: 0; }
  [class*=row].collapse [class*=row] {
    margin-left: 0;
    margin-right: 0; }

[class*=row].collapse-this {
  margin-left: 0;
  margin-right: 0; }

/* 6. Responsive utilites (Утилиты адаптации)  */
/* Hide on large, show on small (Скрываем на больших, на малых показываем) */
@media (min-width: 320px) {
  body .mv_hidden {
    display: none; } }

@media (max-width: 319px) {
  body .mv_visible {
    display: none; } }

@media (min-width: 576px) {
  body .mh_hidden {
    display: none; } }

@media (max-width: 575px) {
  body .mh_visible {
    display: none; } }

@media (min-width: 768px) {
  body .tb_hidden {
    display: none; } }

@media (max-width: 767px) {
  body .tb_visible {
    display: none; } }

@media (min-width: 1024px) {
  body .ds_hidden {
    display: none; } }

@media (max-width: 1023px) {
  body .ds_visible {
    display: none; } }

@media (min-width: 1366px) {
  body .hd_hidden {
    display: none; } }

@media (max-width: 1365px) {
  body .hd_visible {
    display: none; } }

/* 7. Text utulites  */
.lefted {
  text-align: left; }

.righted {
  text-align: right; }

.centered {
  text-align: center; }

.justifyed {
  text-align: justify; }

@media (min-width: 320px) {
  .mv_lefted {
    text-align: left; }
  .mv_righted {
    text-align: right; }
  .mv_centered {
    text-align: center; }
  .mv_justifyed {
    text-align: justify; } }

@media (min-width: 576px) {
  .mh_lefted {
    text-align: left; }
  .mh_righted {
    text-align: right; }
  .mh_centered {
    text-align: center; }
  .mh_justifyed {
    text-align: justify; } }

@media (min-width: 768px) {
  .tb_lefted {
    text-align: left; }
  .tb_righted {
    text-align: right; }
  .tb_centered {
    text-align: center; }
  .tb_justifyed {
    text-align: justify; } }

@media (min-width: 1024px) {
  .ds_lefted {
    text-align: left; }
  .ds_righted {
    text-align: right; }
  .ds_centered {
    text-align: center; }
  .ds_justifyed {
    text-align: justify; } }

@media (min-width: 1366px) {
  .hd_lefted {
    text-align: left; }
  .hd_righted {
    text-align: right; }
  .hd_centered {
    text-align: center; }
  .hd_justifyed {
    text-align: justify; } }

/* 8. SCSS Utulites  */
/* 8.1 Functions  */
/*
* 
* 1. get_grid_bp() - return breakpoint value from $devices
* 2. get_grid_c_m() - return container_max value from $devices
* 3. get_grid_f_b() - return font_base value from $devices
* 4. get_grid_ms_c() - return ms_coeff value from $devices
*
*/
/* 1.  get_grid_c_m($bp_name) - return breakpoint value from $devices */
/* 2. get_grid_c_m($bp_name) - return container_max value from $devices */
/* 3. get_grid_f_b($bp_name) - return font_base value from $devices */
/* 4. get_grid_ms_c($bp_name) - return ms_coeff value from $devices */
/* 5. get_grid_property($bp_name, $propery) - return specified property value $devies */
/* 8.2 Mixins  */
/*
* 
* 1. media-up()   - output @media expression (min-width)
* 2. media-down() - output @media expression (max-width)
* 3. media-only() - output @media expression (min-width) and (max-width)
*
*/
/* 1.  media-up($bp_name) - output @media expression up from breakpoint (min-width) */
/* 2.  media-down($bp_name) - output @media expression down from breakpoint (max-width) */
/* 3.  media-only($bp_name) - output @media expression up from breakpoint to the next breakpoint  (min-width) and (max-width) */
/* 9 Beta test*/
/*
* 
* 1. get_grid_bp() - return breakpoint value from $devices
* 2. get_grid_c_m() - return container_max value from $devices
* 3. get_grid_f_b() - return font_base value from $devices
* 4. get_grid_ms_c() - return ms_coeff value from $devices
*
*/
/* 1.  get_grid_c_m($bp_name) - return breakpoint value from $devices */
/* 2. get_grid_c_m($bp_name) - return container_max value from $devices */
/* 3. get_grid_f_b($bp_name) - return font_base value from $devices */
/* 4. get_grid_ms_c($bp_name) - return ms_coeff value from $devices */
/* 5. get_grid_property($bp_name, $propery) - return specified property value $devies */
/*
+ В ряду .row одна ячейка
+ В ряду .row-flex одна ячейка

+ В ряду .row несколько ячеек - становится по центру, другние сталкивает на след-ю строку
+ В ряду .row-flex несколько ячеек - 
сначала вычисляется свободное пространство после заполнения другими  элементами контейнера,
после этого рассчитываются расположение с авто отступами margin, расталкивая другие элементы
*/
@font-face {
  font-family: "themify";
  src: url("../fonts/themify/themify.eot");
  src: url("../fonts/themify/themify.eot?#iefix") format("eot"), url("../fonts/themify/themify.woff2") format("woff2"), url("../fonts/themify/themify.woff") format("woff"), url("../fonts/themify/themify.ttf") format("truetype"), url("../fonts/themify/themify.svg#themify") format("svg"); }

.themify:before {
  font-family: "themify";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  /* speak: none; only necessary if not using the private unicode range (firstGlyph option) */
  text-decoration: none;
  text-transform: none; }

.themify-angle-right:before {
  content: "\EA01"; }

.themify-bar-chart:before {
  content: "\EA02"; }

.themify-close:before {
  content: "\EA03"; }

.themify-comment-alt:before {
  content: "\EA04"; }

.themify-comments-smiley:before {
  content: "\EA05"; }

.themify-comments:before {
  content: "\EA06"; }

.themify-credit-card:before {
  content: "\EA07"; }

.themify-email:before {
  content: "\EA08"; }

.themify-gift:before {
  content: "\EA09"; }

.themify-headphone-alt:before {
  content: "\EA0A"; }

.themify-heart:before {
  content: "\EA0B"; }

.themify-layout-column3-alt:before {
  content: "\EA0C"; }

.themify-layout-grid2:before {
  content: "\EA0D"; }

.themify-layout-grid3-alt:before {
  content: "\EA0E"; }

.themify-menu:before {
  content: "\EA0F"; }

.themify-minus:before {
  content: "\EA10"; }

.themify-plus:before {
  content: "\EA11"; }

.themify-search:before {
  content: "\EA12"; }

.themify-shopping-cart-full:before {
  content: "\EA13"; }

.themify-shopping-cart:before {
  content: "\EA14"; }

.themify-split-v:before {
  content: "\EA15"; }

.themify-star:before {
  content: "\EA16"; }

.themify-truck:before {
  content: "\EA17"; }

.themify-user:before {
  content: "\EA18"; }

.themify-view-list:before {
  content: "\EA19"; }

/*
 * .Base
 *
*/
/*
 * Variables
*/
/* Colors */
/* Colors */
/* Fonts */
/* Borders */
/* Z-index */
/* Animation */
/*
Updt Z-index,
Add Animation,

*/
/*
DOCSS - Design-orientired CSS
 
Make your code like design with design terms like:
    Color scheme
    Typographic scheme
    Vertical rhytm
    Horizontal rhytm
    Height leveling
*/
/*
 * Display 'flex', and set justify and aligment
 * Call: // flex(space-between, center);
*/
/*
 * Centered image in container like CSS cover
 * Call: // image_center_cover();
*/
/*
 * Centered image in container like CSS contain
 * Call: // image_center_contain();
*/
/*
 * Overflow text in element
 * Call: // text_overflow();
*/
/*
 * Set background clip text
 * Call: // bg_clip_text();
*/
/*
 * Set adaptive font-size
 * Call: // font_size('h3');  ||  font_size(h3);  - протетстить
*/
/*

Obj $devices 
->
Obj $font_size_names
->
function set_font_sizes()
->
mixin font_size_pro()

*/
@media (min-width: 320px) {
  .my_head {
    font-size: 16.5px; } }

@media (min-width: 576px) {
  .my_head {
    font-size: 15.4px; } }

@media (min-width: 768px) {
  .my_head {
    font-size: 17.55px; } }

@media (min-width: 1024px) {
  .my_head {
    font-size: 18.72px; } }

/*
 * Extends
*/
/* . menu-top
 * **********************************************************************
 *
*/
.menu-top {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin: 0  0.5em; }

.menu-top li:last-child {
  margin-right: 0; }

.menu-top li a {
  display: block;
  margin: 0  1em;
  line-height: 1.5em;
  color: #eeeeee;
  font-weight: 400; }
  .menu-top li a:hover {
    color: #ffcc00; }

/* . menu-side
 * **********************************************************************
 *
*/
.sidebar .menu-outer {
  position: -webkit-sticky;
  position: sticky;
  top: 0; }

.menu-side {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-direction: column;
  padding-left: 2em;
  padding: 2em 0 2em 2em; }

.menu-side li {
  text-align: left; }
  .menu-side li:last-child {
    margin-right: 0; }
  .menu-side li a {
    display: block;
    margin: 0.25em  0;
    font-weight: 400;
    line-height: 1.5em;
    color: #eeeeee; }
    @media (min-width: 320px) {
      .menu-side li a {
        font-size: 16.5px; } }
    @media (min-width: 576px) {
      .menu-side li a {
        font-size: 15.4px; } }
    @media (min-width: 768px) {
      .menu-side li a {
        font-size: 17.55px; } }
    @media (min-width: 1024px) {
      .menu-side li a {
        font-size: 18.72px; } }
    .menu-side li a:hover {
      color: #ffcc00; }
  .menu-side li.active > a {
    color: #ffcc00;
    font-weight: 600; }
  .menu-side li .submenu {
    padding-left: 2em; }
    .menu-side li .submenu li a {
      font-weight: 300; }
      @media (min-width: 320px) {
        .menu-side li .submenu li a {
          font-size: 15px; } }
      @media (min-width: 576px) {
        .menu-side li .submenu li a {
          font-size: 14px; } }
      @media (min-width: 768px) {
        .menu-side li .submenu li a {
          font-size: 15px; } }
      @media (min-width: 1024px) {
        .menu-side li .submenu li a {
          font-size: 16px; } }

/*
 * Base
*/
html {
  font-size: 14px;
  height: 100%; }

body {
  font-size: inherit;
  font-family: "Nunito Sans", "Roboto", Verdana, Arial, sans-serif;
  height: 100%;
  margin: 0;
  font-weight: 300; }

* {
  box-sizing: border-box; }

a {
  text-decoration: none; }

ul, ol {
  margin: 0;
  padding: 0;
  list-style: none; }

h1, h2, h3, h4,
.h1, .h2, .h3, .h4 {
  margin: 0.75em 0;
  line-height: 1.2em;
  font-family: "Nunito Sans", "Roboto", Tahoma, Arial, sans-serif;
  font-weight: 400;
  color: #223311; }

h1, .h1 {
  font-size: 2.00534rem;
  font-weight: bold; }

h2, .h2 {
  font-size: 1.68516rem;
  font-weight: bold; }

h3, .h3 {
  font-size: 1.4161rem; }

h4, .h4 {
  font-size: 1.19rem; }

p {
  font-size: 1rem;
  line-height: 1.5em;
  font-weight: 300; }

img {
  display: block;
  max-width: 100%;
  width: 100%;
  height: auto; }

.table-outer {
  min-width: 100%;
  overflow-x: scroll; }

table {
  border-collapse: collapse;
  /* table content */ }
  table tr th {
    background-color: #eeeeee;
    border: 1px solid #cccccc;
    padding-left: 15px;
    padding-right: 15px;
    padding-left: 1.25rem;
    padding-right: 1.25rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem; }
  table tr td {
    border: 1px solid #cccccc;
    vertical-align: middle;
    padding-left: 15px;
    padding-right: 15px;
    padding-left: 1.25rem;
    padding-right: 1.25rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem; }
  table tr td:first-child {
    font-weight: normal;
    padding-right: 2.5rem; }
  table hr {
    opacity: 0; }

table.table--overview tr td:nth-child(2) {
  font-style: italic; }

table.table--overview tr td:nth-child(3) {
  color: #555; }

.themify:before,
.themify:after {
  vertical-align: middle;
  display: block; }

/* fonts */
.font-normal {
  font-weight: 400; }

/* colors */
.color-success {
  color: #372; }

.color-muted {
  color: #999999; }

/* Special chars for this 
✔ &#10004;
*/
.section-component {
  margin: 3em 0; }

code {
  background-color: #dddddd;
  font-family: Consolas; }

.text code,
p code {
  padding: 0 2px;
  background-color: #dddddd;
  border-radius: 4px; }

code.css-class {
  color: darkred; }

code.css-property {
  background: none;
  color: lightblue;
  color: steelblue; }

code.css-directive {
  background: none;
  color: firebrick; }

code.css-mixins {
  background: none;
  color: limegreen; }

code.scss-var {
  color: darkcyan; }

code.scss-function {
  color: royalblue; }

pre {
  margin-bottom: 0; }
  pre code {
    margin: 0; }

.text p {
  margin: 1.5em 0; }

.text h1, .text h2, .text h3, .text h4,
.text .h1, .text .h2, .text .h3, .text .h4 {
  margin: 0.75em 0; }

.text ul, .text ol {
  margin: 1.5em 0;
  padding: 0;
  list-style: disc;
  list-style-position: inside; }

.text a {
  color: #372; }
  .text a:hover {
    text-decoration: underline; }

pre > code {
  opacity: 0; }

/*
    "mainmenu": [
        {
            "item-name": "Overview",
            "item-link": "overview"

        },
        {
            "item-name": "Structure elements",
            "item-link": "structure-elements"
        },
        {
            "item-name": "Modules display",
            "item-link": "modules-display",
            "submenu" : [
                {
                    "item-name" : "Block",
                    "item-link": "#block"
                },
                {
                    "item-name" : "Inline-block",
                    "item-link": "#inline-block"
                },
                {
                    "item-name" : "Flex",
                    "item-link": "#flex"
                }
            ]            
        },
        {
            "item-name": "Columns",
            "item-link": "columns",
            "submenu" : [
                {
                    "item-name" : "Columns Width",
                    "item-link": "#columns-width"
                },
                {
                    "item-name" : "Offsets",
                    "item-link": "#offsets"
                },
                {
                    "item-name" : "Nesting",
                    "item-link": "#nesting"
                }
            ]
        },
        {
            "item-name": "Features",
            "item-link": "features",
            "submenu" : [
                {
                    "item-name" : "Horizontal Aligment",
                    "item-link": "horizontal-aligment"
                },
                {
                    "item-name" : "Vertical Aligment",
                    "item-link": "vertical-aligment"
                },
                {
                    "item-name" : "Ordering (Reverse)",
                    "item-link": "ordering-reverse"
                },
                {
                    "item-name" : "Columns Same Height",
                    "item-link": "columns-same-height"
                }

            ]            
        },
        {
            "item-name": "Auxiliary elements",
            "item-link": "auxiliary-elements"
        },
        {
            "item-name": "Collapse",
            "item-link": "collapse"
        },
        {
            "item-name": "Responsive utilites",
            "item-link": "responsive-utilites"
        },        
        {
            "item-name": "Text utulites",
            "item-link": "text-utulites"
        },
        {
            "item-name": "SCSS utulites (functions)",
            "item-link": "scss-utulites-functions"
        }        

    ],*/
@media (min-width: 768px) {
  html {
    font-size: 16px; } }

/* media end*/
.hljs {
  display: block;
  overflow-x: auto;
  padding: .5em;
  background: #23241f; }

.hljs,
.hljs-tag,
.hljs-subst {
  color: #f8f8f2; }

.hljs-strong,
.hljs-emphasis {
  color: #a8a8a2; }

.hljs-bullet,
.hljs-quote,
.hljs-number,
.hljs-regexp,
.hljs-literal,
.hljs-link {
  color: #ae81ff; }

.hljs-code,
.hljs-title,
.hljs-section,
.hljs-selector-class {
  color: #a6e22e; }

.hljs-strong {
  font-weight: bold; }

.hljs-emphasis {
  font-style: italic; }

.hljs-keyword,
.hljs-selector-tag,
.hljs-name,
.hljs-attr {
  color: #f92672; }

.hljs-symbol,
.hljs-attribute {
  color: #66d9ef; }

.hljs-params,
.hljs-class .hljs-title {
  color: #f8f8f2; }

.hljs-string,
.hljs-type,
.hljs-built_in,
.hljs-builtin-name,
.hljs-selector-id,
.hljs-selector-attr,
.hljs-selector-pseudo,
.hljs-addition,
.hljs-variable,
.hljs-template-variable {
  color: #e6db74; }

.hljs-comment,
.hljs-deletion,
.hljs-meta {
  color: #75715e; }

/* 0. General Vars, Mixins, Extends
 *
 *
*/
@media (min-width: 1024px) {
  .container--main {
    display: flex;
    justify-content: space-between;
    flex-direction: row-reverse; }
    .container--main .sidebar {
      margin-right: 40px; } }

.main {
  padding-left: 15px;
  padding-right: 15px;
  float: right;
  width: 100%;
  margin-bottom: 3rem; }
  @media (min-width: 1024px) {
    .main {
      width: calc(100% - 360px - 40px); } }
  @media (min-width: 1366px) {
    .main {
      width: calc(100% - 360px - 40px);
      padding-right: 18vw; } }

.sidebar {
  padding-left: 15px;
  padding-right: 15px;
  float: left;
  width: 100%;
  background-color: #999999;
  background-color: #708078;
  color: #ffffff; }
  @media (min-width: 1024px) {
    .sidebar {
      margin: 0;
      width: 360px; } }

.main--sidebar--left {
  float: right; }

.main--sidebar--right {
  float: left; }

.main--sidebar--right + .sidebar {
  float: right; }

/* 1. Header
 * **********************************************************************
 *  
*/
.header {
  background-color: #372;
  color: #ffffff; }

.header-top {
  padding: 1.5rem; }

.header-left {
  display: flex;
  justify-content: flex-start;
  align-items: center; }

.logo {
  margin-right: 1em;
  font-weight: bold;
  text-shadow: 3px 3px 0px rgba(204, 204, 204, 0.5);
  color: #dddddd; }
  .logo img {
    width: auto;
    max-width: 100%;
    height: auto; }
  @media (min-width: 320px) {
    .logo {
      font-size: 26.57342px; } }
  @media (min-width: 576px) {
    .logo {
      font-size: 24.80185px; } }
  @media (min-width: 768px) {
    .logo {
      font-size: 38.47746px; } }
  @media (min-width: 1024px) {
    .logo {
      font-size: 41.04263px; } }

/* media end */
/* 2. Menu top
 * **********************************************************************
 *
*/
/* 3. Slider
 * **********************************************************************
 *
*/
/* 4. Footer
 * **********************************************************************
 *
*/
.footer {
  background-color: #cccccc;
  padding: 2.25rem 0;
  color: #555; }
  .footer a {
    color: #372;
    font-weight: 400; }
    .footer a:hover {
      text-decoration: underline; }

/* 5. menu-side
 * **********************************************************************
 *
*/
/* 6. demo-block
 * **********************************************************************
 *
*/
.demo-block {
  background-color: #999999;
  margin-bottom: 1.5rem;
  text-align: center;
  font-size: 1rem;
  background: linear-gradient(to right, #5786AD, #1F405B);
  color: #ffffff; }

.demo-inline-block {
  width: 100%;
  height: auto;
  padding: 1em;
  background-color: #987;
  background: linear-gradient(to right, #5786AD, #1F405B);
  font-size: 1rem;
  line-height: 1.5rem;
  color: #e9e8e7; }

.bg-green {
  background: linear-gradient(to right, #56B856, #217121); }

.bg-purple {
  background: linear-gradient(to right, #8F57AF, #481F5E); }

.section-columns-offsets .demo-rows [class*=row],
.ssection-features-vertical-alignment .demo-rows [class*=row] {
  margin-bottom: 1.5rem;
  background-color: #eeeeee; }
  .section-columns-offsets .demo-rows [class*=row] .demo-block,
  .ssection-features-vertical-alignment .demo-rows [class*=row] .demo-block {
    margin-bottom: -0px; }

/* Nesting */
.demo-block .demo-block {
  background-color: #fff;
  background: linear-gradient(to right, #8D6329, #C69A5D); }

/* Display-models */
[class*=section-display] {
  margin-bottom: 1.5rem; }

.section-display-models-inline-block .row-line {
  padding-bottom: 1.5rem; }
  .section-display-models-inline-block .row-line > div .demo-block {
    margin-bottom: 0; }

.section-display-models-flex .row-flex {
  padding-bottom: 1.5rem; }
  .section-display-models-flex .row-flex > div .demo-block {
    margin-bottom: 0;
    position: relative;
    height: 100%; }

.section-text-utilites .demo-block {
  text-align: inherit; }

.section-features-columns-same-height .demo-rows .row-flex > div {
  background-color: #987;
  background: linear-gradient(to right, #5786AD, #1F405B);
  font-size: 1rem;
  line-height: 1.5rem;
  color: #e9e8e7; }

.my-class {
  padding: 345;
  line-height: 1.7; }

.my-block {
  font-size: 15px; }
  @media (min-width: 1024px) {
    .my-block {
      font-size: 16px;
      max-width: 600px; } }

@media (min-width: 1024px) {
  .my-block {
    margin-top: 20px; } }

.my-block {
  font-size: 15px; }

.my-block {
  max-width: 600px; }

.my-block {
  line-height: 16.5px; }

h6 {
  font-size: 16.5px; }

@media (min-width: 1024px) {
  .my-test-block {
    width: 50%;
    background-color: #999; } }

@media (max-width: 767px) {
  .my-test-block {
    width: 100%;
    background-color: dakrblue; } }

@media (min-width: 768px) and (max-width: 1023px) {
  .my-test-block {
    background-color: lightgreen; } }

.media-block {
  height: 100px;
  background-color: #ccc; }
  @media (min-width: 1024px) {
    .media-block {
      width: 50%;
      background-color: #999; } }
  @media (min-width: 1366px) {
    .media-block {
      width: 100%;
      background-color: #555; } }
  @media (max-width: 767px) {
    .media-block {
      padding: 1em;
      background-color: dakrblue; } }

@media (min-width: 1024px) and (max-width: 1365px) {
  .media-inline {
    background-color: lightgreen; } }

@media (min-width: 320px) {
  .test_devices_by_fonts {
    font-size: 15px; } }

@media (min-width: 576px) {
  .test_devices_by_fonts {
    font-size: 14px; } }

@media (min-width: 768px) {
  .test_devices_by_fonts {
    font-size: 15px; } }

@media (min-width: 1024px) {
  .test_devices_by_fonts {
    font-size: 16px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
