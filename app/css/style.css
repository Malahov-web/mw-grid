@charset "UTF-8";
/*
 * Table of contents   Содержание
 *
 *  0. General Vars, Mixins, Extends
 *  1. Header
 *  2. Menu main
 *  3. Slider
 *  4. 

 *  14.
 *
 */
/*
* Options
* 1. Structure elements 
* 2. Modules display
* 3. Columns
* 4. Auxiliary elements
* 5. Collapse 
* 6. Responsive utilites
* 7. Text utulites
* 8. SCSS utulites (functions)
*/
/* Options: */
/* 1. Structure elements */
@import url("https://fonts.googleapis.com/css?family=Nunito+Sans:300,300i,400,600,700&display=swap");
.section {
  float: left;
  width: 100%;
  clear: both; }

.container {
  max-width: 1200px;
  padding-left: 10px;
  padding-right: 10px;
  margin: 0 auto;
  box-sizing: border-box;
  position: relative; }

.container-elastic {
  max-width: none; }

/* 2. Modules display */
/*
Modules have:
    vertical aligment ( .middle, etc.. )
    reverse order ( .row-reverse )
*/
/* Block  model */
.row {
  margin-left: -10px;
  margin-right: -10px; }

.row > div {
  float: left; }

.row.row-reverse > div {
  float: right; }

/* Inline-block  model */
/* Flex  model */
.row-flex {
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px; }

.row-flexbox {
  display: flex;
  margin-left: -10px;
  margin-right: -10px; }

[class*=row-flex].middle {
  align-items: center; }

[class*=row-flex].top {
  align-items: flex-start; }

[class*=row-flex].bottom {
  align-items: flex-end; }

[class*=row-flex].baseline {
  align-items: baseline; }

[class*=row-flex].stretch {
  align-items: stretch; }

.row-flex.row-reverse {
  flex-direction: row-reverse; }

/* 3. Columns */
/* 3. Columns v.2 */
[class*="mv_"], [class*="tb_"], [class*="ds_"] {
  box-sizing: border-box;
  padding-left: 10px;
  padding-right: 10px;
  position: relative;
  min-height: 1px; }

@media (min-width: 320px) {
  .mv_offset_0 {
    margin-left: 0; }
  .mv_1 {
    width: 4.16667%; }
  .mv_offset_1 {
    margin-left: 4.16667%; }
  .mv_2 {
    width: 8.33333%; }
  .mv_offset_2 {
    margin-left: 8.33333%; }
  .mv_3 {
    width: 12.5%; }
  .mv_offset_3 {
    margin-left: 12.5%; }
  .mv_4 {
    width: 16.66667%; }
  .mv_offset_4 {
    margin-left: 16.66667%; }
  .mv_5 {
    width: 20.83333%; }
  .mv_offset_5 {
    margin-left: 20.83333%; }
  .mv_6 {
    width: 25%; }
  .mv_offset_6 {
    margin-left: 25%; }
  .mv_7 {
    width: 29.16667%; }
  .mv_offset_7 {
    margin-left: 29.16667%; }
  .mv_8 {
    width: 33.33333%; }
  .mv_offset_8 {
    margin-left: 33.33333%; }
  .mv_9 {
    width: 37.5%; }
  .mv_offset_9 {
    margin-left: 37.5%; }
  .mv_10 {
    width: 41.66667%; }
  .mv_offset_10 {
    margin-left: 41.66667%; }
  .mv_11 {
    width: 45.83333%; }
  .mv_offset_11 {
    margin-left: 45.83333%; }
  .mv_12 {
    width: 50%; }
  .mv_offset_12 {
    margin-left: 50%; }
  .mv_13 {
    width: 54.16667%; }
  .mv_offset_13 {
    margin-left: 54.16667%; }
  .mv_14 {
    width: 58.33333%; }
  .mv_offset_14 {
    margin-left: 58.33333%; }
  .mv_15 {
    width: 62.5%; }
  .mv_offset_15 {
    margin-left: 62.5%; }
  .mv_16 {
    width: 66.66667%; }
  .mv_offset_16 {
    margin-left: 66.66667%; }
  .mv_17 {
    width: 70.83333%; }
  .mv_offset_17 {
    margin-left: 70.83333%; }
  .mv_18 {
    width: 75%; }
  .mv_offset_18 {
    margin-left: 75%; }
  .mv_19 {
    width: 79.16667%; }
  .mv_offset_19 {
    margin-left: 79.16667%; }
  .mv_20 {
    width: 83.33333%; }
  .mv_offset_20 {
    margin-left: 83.33333%; }
  .mv_21 {
    width: 87.5%; }
  .mv_offset_21 {
    margin-left: 87.5%; }
  .mv_22 {
    width: 91.66667%; }
  .mv_offset_22 {
    margin-left: 91.66667%; }
  .mv_23 {
    width: 95.83333%; }
  .mv_offset_23 {
    margin-left: 95.83333%; }
  .mv_24 {
    width: 100%; }
  .mv_offset_24 {
    margin-left: 100%; } }

@media (min-width: 768px) {
  .tb_offset_0 {
    margin-left: 0; }
  .tb_1 {
    width: 4.16667%; }
  .tb_offset_1 {
    margin-left: 4.16667%; }
  .tb_2 {
    width: 8.33333%; }
  .tb_offset_2 {
    margin-left: 8.33333%; }
  .tb_3 {
    width: 12.5%; }
  .tb_offset_3 {
    margin-left: 12.5%; }
  .tb_4 {
    width: 16.66667%; }
  .tb_offset_4 {
    margin-left: 16.66667%; }
  .tb_5 {
    width: 20.83333%; }
  .tb_offset_5 {
    margin-left: 20.83333%; }
  .tb_6 {
    width: 25%; }
  .tb_offset_6 {
    margin-left: 25%; }
  .tb_7 {
    width: 29.16667%; }
  .tb_offset_7 {
    margin-left: 29.16667%; }
  .tb_8 {
    width: 33.33333%; }
  .tb_offset_8 {
    margin-left: 33.33333%; }
  .tb_9 {
    width: 37.5%; }
  .tb_offset_9 {
    margin-left: 37.5%; }
  .tb_10 {
    width: 41.66667%; }
  .tb_offset_10 {
    margin-left: 41.66667%; }
  .tb_11 {
    width: 45.83333%; }
  .tb_offset_11 {
    margin-left: 45.83333%; }
  .tb_12 {
    width: 50%; }
  .tb_offset_12 {
    margin-left: 50%; }
  .tb_13 {
    width: 54.16667%; }
  .tb_offset_13 {
    margin-left: 54.16667%; }
  .tb_14 {
    width: 58.33333%; }
  .tb_offset_14 {
    margin-left: 58.33333%; }
  .tb_15 {
    width: 62.5%; }
  .tb_offset_15 {
    margin-left: 62.5%; }
  .tb_16 {
    width: 66.66667%; }
  .tb_offset_16 {
    margin-left: 66.66667%; }
  .tb_17 {
    width: 70.83333%; }
  .tb_offset_17 {
    margin-left: 70.83333%; }
  .tb_18 {
    width: 75%; }
  .tb_offset_18 {
    margin-left: 75%; }
  .tb_19 {
    width: 79.16667%; }
  .tb_offset_19 {
    margin-left: 79.16667%; }
  .tb_20 {
    width: 83.33333%; }
  .tb_offset_20 {
    margin-left: 83.33333%; }
  .tb_21 {
    width: 87.5%; }
  .tb_offset_21 {
    margin-left: 87.5%; }
  .tb_22 {
    width: 91.66667%; }
  .tb_offset_22 {
    margin-left: 91.66667%; }
  .tb_23 {
    width: 95.83333%; }
  .tb_offset_23 {
    margin-left: 95.83333%; }
  .tb_24 {
    width: 100%; }
  .tb_offset_24 {
    margin-left: 100%; } }

@media (min-width: 1024px) {
  .ds_offset_0 {
    margin-left: 0; }
  .ds_1 {
    width: 4.16667%; }
  .ds_offset_1 {
    margin-left: 4.16667%; }
  .ds_2 {
    width: 8.33333%; }
  .ds_offset_2 {
    margin-left: 8.33333%; }
  .ds_3 {
    width: 12.5%; }
  .ds_offset_3 {
    margin-left: 12.5%; }
  .ds_4 {
    width: 16.66667%; }
  .ds_offset_4 {
    margin-left: 16.66667%; }
  .ds_5 {
    width: 20.83333%; }
  .ds_offset_5 {
    margin-left: 20.83333%; }
  .ds_6 {
    width: 25%; }
  .ds_offset_6 {
    margin-left: 25%; }
  .ds_7 {
    width: 29.16667%; }
  .ds_offset_7 {
    margin-left: 29.16667%; }
  .ds_8 {
    width: 33.33333%; }
  .ds_offset_8 {
    margin-left: 33.33333%; }
  .ds_9 {
    width: 37.5%; }
  .ds_offset_9 {
    margin-left: 37.5%; }
  .ds_10 {
    width: 41.66667%; }
  .ds_offset_10 {
    margin-left: 41.66667%; }
  .ds_11 {
    width: 45.83333%; }
  .ds_offset_11 {
    margin-left: 45.83333%; }
  .ds_12 {
    width: 50%; }
  .ds_offset_12 {
    margin-left: 50%; }
  .ds_13 {
    width: 54.16667%; }
  .ds_offset_13 {
    margin-left: 54.16667%; }
  .ds_14 {
    width: 58.33333%; }
  .ds_offset_14 {
    margin-left: 58.33333%; }
  .ds_15 {
    width: 62.5%; }
  .ds_offset_15 {
    margin-left: 62.5%; }
  .ds_16 {
    width: 66.66667%; }
  .ds_offset_16 {
    margin-left: 66.66667%; }
  .ds_17 {
    width: 70.83333%; }
  .ds_offset_17 {
    margin-left: 70.83333%; }
  .ds_18 {
    width: 75%; }
  .ds_offset_18 {
    margin-left: 75%; }
  .ds_19 {
    width: 79.16667%; }
  .ds_offset_19 {
    margin-left: 79.16667%; }
  .ds_20 {
    width: 83.33333%; }
  .ds_offset_20 {
    margin-left: 83.33333%; }
  .ds_21 {
    width: 87.5%; }
  .ds_offset_21 {
    margin-left: 87.5%; }
  .ds_22 {
    width: 91.66667%; }
  .ds_offset_22 {
    margin-left: 91.66667%; }
  .ds_23 {
    width: 95.83333%; }
  .ds_offset_23 {
    margin-left: 95.83333%; }
  .ds_24 {
    width: 100%; }
  .ds_offset_24 {
    margin-left: 100%; } }

/* 4. Auxiliary elements (Вспомогательные структурные элементы) */
.container:before,
.container:after,
.row:before,
.row:after {
  display: table;
  content: " ";
  box-sizing: border-box; }

.container:after,
.row:after {
  clear: both; }

/* 5. Collapse */
.collapse > [class*=row] [class*="mv_"], .collapse > [class*=row] [class*="tb_"], .collapse > [class*=row] [class*="ds_"], [class*=row].collapse [class*="mv_"], [class*=row].collapse [class*="tb_"], [class*=row].collapse [class*="ds_"] {
  padding-left: 0;
  padding-right: 0; }

.collapse {
  padding-left: 0;
  padding-right: 0; }
  .collapse > [class*=row] {
    margin-left: 0;
    margin-right: 0; }

[class*=row].collapse {
  margin-left: 0;
  margin-right: 0; }

/* 6. Responsive utilites (Утилиты адаптации)  */
/* Hide on large, show on small (Скрываем на больших, на малых показываем) */
@media (min-width: 320px) {
  body .mv_hidden {
    display: none; } }

@media (max-width: 319px) {
  body .mv_visible {
    display: none; } }

@media (min-width: 768px) {
  body .tb_hidden {
    display: none; } }

@media (max-width: 767px) {
  body .tb_visible {
    display: none; } }

@media (min-width: 1024px) {
  body .ds_hidden {
    display: none; } }

@media (max-width: 1023px) {
  body .ds_visible {
    display: none; } }

/* 7. Text utulites  */
.lefted {
  text-align: left; }

.righted {
  text-align: right; }

.centered {
  text-align: center; }

.justifyed {
  text-align: justify; }

@media (min-width: 320px) {
  .mv_lefted {
    text-align: left; }
  .mv_righted {
    text-align: right; }
  .mv_centered {
    text-align: center; }
  .mv_justifyed {
    text-align: justify; } }

@media (min-width: 768px) {
  .tb_lefted {
    text-align: left; }
  .tb_righted {
    text-align: right; }
  .tb_centered {
    text-align: center; }
  .tb_justifyed {
    text-align: justify; } }

@media (min-width: 1024px) {
  .ds_lefted {
    text-align: left; }
  .ds_righted {
    text-align: right; }
  .ds_centered {
    text-align: center; }
  .ds_justifyed {
    text-align: justify; } }

/* 8. SCSS Utulites (functions)  */
/*
* 
* 1. get_grid_bp() - return breakpoint value from $devices
* 2. get_grid_c_m() - return container_max value from $devices
* 3. get_grid_f_b() - return font_base value from $devices
* 4. get_grid_ms_c() - return ms_coeff value from $devices
*
*/
/* 1.  get_grid_c_m($bp_name) - return breakpoint value from $devices */
/* 2. get_grid_c_m($bp_name) - return container_max value from $devices */
/* 3. get_grid_f_b($bp_name) - return font_base value from $devices */
/* 4. get_grid_ms_c($bp_name) - return ms_coeff value from $devices */
@font-face {
  font-family: "myfont";
  src: url("fonts/myfont.eot?") format("eot"), url("fonts/myfont.woff2") format("woff2"), url("fonts/myfont.woff") format("woff"), url("fonts/myfont.ttf") format("truetype"), url("fonts/myfont.svg#myfont") format("svg"); }

@font-face {
  font-family: "themify";
  src: url("../fonts/themify/themify.eot");
  src: url("../fonts/themify/themify.eot?#iefix") format("eot"), url("../fonts/themify/themify.woff2") format("woff2"), url("../fonts/themify/themify.woff") format("woff"), url("../fonts/themify/themify.ttf") format("truetype"), url("../fonts/themify/themify.svg#themify") format("svg"); }

.themify:before {
  font-family: "themify";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  /* speak: none; only necessary if not using the private unicode range (firstGlyph option) */
  text-decoration: none;
  text-transform: none; }

.themify-angle-right:before {
  content: "\EA01"; }

.themify-bar-chart:before {
  content: "\EA02"; }

.themify-close:before {
  content: "\EA03"; }

.themify-comment-alt:before {
  content: "\EA04"; }

.themify-comments-smiley:before {
  content: "\EA05"; }

.themify-comments:before {
  content: "\EA06"; }

.themify-credit-card:before {
  content: "\EA07"; }

.themify-email:before {
  content: "\EA08"; }

.themify-gift:before {
  content: "\EA09"; }

.themify-headphone-alt:before {
  content: "\EA0A"; }

.themify-heart:before {
  content: "\EA0B"; }

.themify-layout-column3-alt:before {
  content: "\EA0C"; }

.themify-layout-grid2:before {
  content: "\EA0D"; }

.themify-layout-grid3-alt:before {
  content: "\EA0E"; }

.themify-menu:before {
  content: "\EA0F"; }

.themify-minus:before {
  content: "\EA10"; }

.themify-plus:before {
  content: "\EA11"; }

.themify-search:before {
  content: "\EA12"; }

.themify-shopping-cart-full:before {
  content: "\EA13"; }

.themify-shopping-cart:before {
  content: "\EA14"; }

.themify-split-v:before {
  content: "\EA15"; }

.themify-star:before {
  content: "\EA16"; }

.themify-truck:before {
  content: "\EA17"; }

.themify-user:before {
  content: "\EA18"; }

.themify-view-list:before {
  content: "\EA19"; }

/*
 * .Base
 *
*/
/*
 * Variables
*/
/* Colors */
/* Colors */
/* Fonts */
/* Borders */
/* Z-index */
/* Animation */
/*
Updt Z-index,
Add Animation,

*/
/*
 * hexagon( ширина, цвет бг, бордер-ширина, бордер-цвет ){}
*/
/*
DOCSS - Design-orientired CSS
 
Make your code like design with design terms like:
    Color scheme
    Typographic scheme
    Vertical rhytm
    Horizontal rhytm
    Height leveling
*/
/*
 * Display 'flex', and set justify and aligment
 * Call: // flex(space-between, center);
*/
/*
 * Centered image in container like CSS cover
 * Call: // image_center_cover();
*/
/*
 * Centered image in container like CSS contain
 * Call: // image_center_contain();
*/
/*
 * Overflow text in element
 * Call: // text_overflow();
*/
/*
 * Set background clip text
 * Call: // bg_clip_text();
*/
/*
 * Set adaptive font-size
 * Call: // font_size('h3');  ||  font_size(h3);  - протетстить
*/
/*

Obj $devices 
->
Obj $font_size_names
->
function set_font_sizes()
->
mixin font_size_pro()

*/
@media (min-width: 320px) {
  .my_head {
    font-size: 16.5px; } }

@media (min-width: 768px) {
  .my_head {
    font-size: 17.55px; } }

@media (min-width: 1024px) {
  .my_head {
    font-size: 18.72px; } }

/*
 * Extends
*/
/*
 * Base
*/
html {
  font-size: 14px;
  height: 100%; }

body {
  font-size: inherit;
  font-family: "Nunito Sans", "Roboto", Verdana, Arial, sans-serif;
  height: 100%;
  margin: 0;
  font-weight: 300; }

* {
  box-sizing: border-box; }

a {
  text-decoration: none; }

ul, ol {
  margin: 0;
  padding: 0;
  list-style: none; }

h1, h2, h3, h4,
.h1, .h2, .h3, .h4 {
  margin: 0;
  line-height: 1.2em;
  font-family: "Nunito Sans", "Roboto", Tahoma, Arial, sans-serif;
  font-weight: 400;
  color: #223311; }

h1, .h1 {
  font-size: 2.00534rem;
  letter-spacing: 0.05em; }

h2, .h2 {
  font-size: 1.68516rem; }

h3, .h3 {
  font-size: 1.4161rem; }

h4, .h4 {
  font-size: 1.19rem; }

p {
  margin-top: 0;
  margin-bottom: 1em;
  font-size: 1rem;
  line-height: 1.5em;
  font-weight: 300; }

img {
  display: block;
  max-width: 100%;
  width: 100%;
  height: auto; }

.themify:before,
.themify:after {
  vertical-align: middle;
  display: block; }

.section-component {
  margin: 3em 0; }

@media (min-width: 768px) {
  html {
    font-size: 16px; } }

/* media end*/
/* 0. General Vars, Mixins, Extends
 *
 *

*/
.main {
  padding-left: 10px;
  padding-right: 10px;
  float: right;
  width: 100%; }
  @media (min-width: 1024px) {
    .main {
      width: calc(100% - 360px - 40px);
      padding-right: 360px; } }

.sidebar {
  padding-left: 10px;
  padding-right: 10px;
  float: left;
  width: 100%;
  background-color: #999999;
  background-color: #708078;
  color: #ffffff; }
  @media (min-width: 1024px) {
    .sidebar {
      margin: 0;
      width: 360px; } }

.main--sidebar--left {
  float: right; }

.main--sidebar--right {
  float: left; }

.main--sidebar--right + .sidebar {
  float: right; }

/* 1. Header
 * **********************************************************************
 *  
*/
.header {
  background-color: #372;
  color: #ffffff; }

.header-top {
  padding: 1.5rem; }

.header-left {
  display: flex;
  justify-content: flex-start;
  align-items: center; }

.logo {
  margin-right: 1em;
  font-weight: bold;
  text-shadow: 3px 3px 0px rgba(204, 204, 204, 0.5);
  color: #dddddd; }
  .logo img {
    width: auto;
    max-width: 100%;
    height: auto; }
  @media (min-width: 320px) {
    .logo {
      font-size: 26.57342px; } }
  @media (min-width: 768px) {
    .logo {
      font-size: 38.47746px; } }
  @media (min-width: 1024px) {
    .logo {
      font-size: 41.04263px; } }

/* media end */
.menu-top {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin: 0  0.5em; }

.menu-top li:last-child {
  margin-right: 0; }

.menu-top li a {
  display: block;
  margin: 0  1em;
  line-height: 1.5em;
  color: #eeeeee; }
  .menu-top li a:hover {
    color: #ffcc00; }

/* 2. Menu main
 * **********************************************************************
 *
*/
.menu-control {
  display: none; }

.menu-main li {
  display: inline-block; }
  .menu-main li:last-child {
    margin-right: 0; }
  .menu-main li a {
    display: block; }

/* 3. Slider
 * **********************************************************************
 *
*/
.slider-outer .slider,
.section-slider .slider {
  width: 100%;
  height: 100vh; }

.menu-side {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-direction: column;
  padding-left: 2em;
  padding: 2em 0 2em 2em; }

.menu-side li {
  text-align: left; }
  .menu-side li:last-child {
    margin-right: 0; }
  .menu-side li a {
    display: block;
    margin: 0.25em  0;
    font-weight: 400;
    line-height: 1.5em;
    color: #eeeeee; }
    @media (min-width: 320px) {
      .menu-side li a {
        font-size: 16.5px; } }
    @media (min-width: 768px) {
      .menu-side li a {
        font-size: 17.55px; } }
    @media (min-width: 1024px) {
      .menu-side li a {
        font-size: 18.72px; } }
    .menu-side li a:hover {
      color: #ffcc00; }
  .menu-side li .submenu {
    padding-left: 2em; }
    .menu-side li .submenu li a {
      font-weight: 300; }
      @media (min-width: 320px) {
        .menu-side li .submenu li a {
          font-size: 15px; } }
      @media (min-width: 1024px) {
        .menu-side li .submenu li a {
          font-size: 16px; } }

.demo-block {
  background-color: #999999;
  margin-bottom: 1.5rem;
  text-align: center;
  background: linear-gradient(to right, #5786AD, #1F405B);
  color: #ffffff; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
